#进阶3：排序查询
/*

select 查询列表
from 表名
【where 筛选条件】
order by 排序列表

执行顺序：
①from子句
②where子句
③select子句
④order by子句

举例：
select last_name,salary
from employees
where salary>15000
order by salary;

特点：
1.排序列表可以是单个字段、多个字段、表达式、函数、列数、以及以上的组合
2.升序，通过asc，默认行为
  降序，通过desc

*/

#一、按单个字段排序
#案例1：将员工编号>120的员工信息进行工资的升序
SELECT * FROM employees WHERE employee_id>120 ORDER BY salary;

#案例2：将员工编号>120的员工信息进行工资的降序
SELECT * FROM employees WHERE employee_id>120 ORDER BY salary DESC;

#二、按表达式排序
#案例1：对有奖金的员工，按年薪排序
SELECT *,salary*12*(1+IFNULL(`commission_pct`,0)) AS '年薪'
FROM employees 
WHERE `commission_pct` IS NOT NULL
ORDER BY salary*12*(1+IFNULL(`commission_pct`,0));

#三、按别名排序
#案例1：对有奖金的员工，按年薪排序
SELECT *,salary*12*(1+IFNULL(`commission_pct`,0)) AS '年薪'
FROM employees 
WHERE `commission_pct` IS NOT NULL
ORDER BY '年薪'DESC;
#注意这里因为执行的先后顺序，where处不能用年薪进行判断
#由于已经执行了where判断，去除了奖金率为null的人，因此select可以不用ifnull
SELECT *,salary*12*(1+commission_pct) AS '年薪'
FROM employees 
WHERE `commission_pct` IS NOT NULL
ORDER BY '年薪' DESC;
#注意！！！这里order by后面的年薪已经是整型，可以直接排序，不能加单引号，会变成ASCII码对应数值？反正结果错误
SELECT *,salary*12*(1+commission_pct) AS '年薪'
FROM employees 
WHERE `commission_pct` IS NOT NULL
ORDER BY 年薪 DESC;

#四、按函数的结果排序
#案例1：按姓名的字数长度进行升序
SELECT LENGTH(last_name) AS '姓名长度',last_name
FROM employees
ORDER BY 姓名长度;
#注意！！！这里order by后面的姓名长度已经是整型数，不需要也不可以加单引号

#五、按多个字段排序，以逗号隔开
#案例1：查询员工的姓名、工资、部门编号，先按工资升序，再按部门编号降序；
SELECT last_name,salary,department_id
FROM employees
ORDER BY salary ASC,department_id DESC;

#六、按列数进行排序
#直接跟列数，但这个语义性比较差，比较难看懂
SELECT * FROM employees ORDER BY 2;
